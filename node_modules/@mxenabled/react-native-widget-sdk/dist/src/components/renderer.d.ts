import { MutableRefObject, ReactElement } from "react";
import { StyleProp, ViewStyle } from "react-native";
import { WebView } from "react-native-webview";
import { Payload } from "@mxenabled/widget-post-message-definitions";
import { Props } from "../sso";
import { LoadUrlInBrowserProps } from "./load_url_in_browser";
import { SdkTelemetryProps } from "./telemetry";
export declare type StylingProps = {
    style?: StyleProp<ViewStyle>;
    webViewStyle?: StyleProp<ViewStyle>;
};
declare type MaybeWebViewRef = MutableRefObject<WebView | null>;
declare type BaseProps<Configuration> = Props<Configuration> & StylingProps & LoadUrlInBrowserProps & SdkTelemetryProps;
export declare function useWidgetRenderer<Configuration>(props: BaseProps<Configuration>, dispatchEvent: (url: string, callbacks: BaseProps<Configuration>) => Payload | undefined): ReactElement;
export declare function useWidgetRendererWithRef<Configuration>(props: BaseProps<Configuration>, dispatchEvent: (url: string, callbacks: BaseProps<Configuration>) => Payload | undefined): [MaybeWebViewRef, ReactElement];
export {};
