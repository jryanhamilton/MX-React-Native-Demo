import { Dimensions } from "react-native";
var Orientation;
(function (Orientation) {
    Orientation[Orientation["Portrait"] = 0] = "Portrait";
    Orientation[Orientation["Landscape"] = 1] = "Landscape";
})(Orientation || (Orientation = {}));
export const isPortrait = () => getScreenHeight() >= getScreenWidth();
export const isLandscape = () => getScreenHeight() <= getScreenWidth();
export const getScreenHeight = () => getScreen().height;
export const getScreenWidth = () => getScreen().width;
export const getScreen = () => Dimensions.get("screen");
export const onDimensionChange = (fn) => {
    const callback = () => fn(isPortrait() ? Orientation.Portrait : Orientation.Landscape);
    const sub = Dimensions.addEventListener("change", callback);
    /* removeEventListener is deprecated but addEventListener does not return a
     * subscription object in versions of React Native v0.64 or below. We can
     * remove this condition when v64 (or below) is no longer supported.
     */
    return () => sub
        ? sub.remove()
        : Dimensions.removeEventListener("change", callback);
};
